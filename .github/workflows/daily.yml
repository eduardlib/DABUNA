name: Dabuna Daily
on:
  schedule:
    # 15:00 UTC = 18:00 IL בקיץ / 17:00 IL בחורף
    - cron: "0 15 * * *"
  workflow_dispatch: {}

permissions:
  contents: write

concurrency:
  group: dabuna-daily
  cancel-in-progress: false

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - uses: actions/setup-python@v5
        with: { python-version: "3.11" }

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Daily
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        run: python run.py daily

      - name: Build dashboard JSONs
        run: |
          mkdir -p docs
          cp -f storage/latest_scores.json docs/latest_scores.json || true
          python - <<'PY'
import os, json, glob
days=[]
for p in sorted(glob.glob('storage/daily_scores_*.json')):
    with open(p,'r',encoding='utf-8') as f:
        data=json.load(f)
    rows = data if isinstance(data, list) else data.get('rows', [])
    date = os.path.basename(p)[13:23]
    days.append({'date': date, 'rows': rows})
with open('docs/history_scores.json','w',encoding='utf-8') as f:
    json.dump({'days': days}, f, ensure_ascii=False, indent=2)
PY

      - name: Commit docs & storage (rebase-safe)
        run: |
          set -e
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git fetch origin main
          git checkout main
          git add docs/latest_scores.json docs/history_scores.json storage || true
          git diff --cached --quiet || git commit -m "daily: publish dashboard JSONs & storage $(date -u +%F)"
          git pull --rebase --autostash origin main || true
          if [ -d .git/rebase-apply ] || [ -d .git/rebase-merge ]; then
            git rebase --abort || true
            git pull --no-rebase origin main
          fi
          git push origin HEAD:main || (git pull --rebase --autostash origin main && git push origin HEAD:main)